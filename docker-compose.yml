services:
  vector_db_service:
    build:
      context: ./src/vector_db
    ports:
      - "8000:8000"
    networks:
      - test-network
    # entrypoint: ["/bin/sh", "-c", "echo 'Overriding docker-entrypoint.sh...'"]

  api_service_base:
    build:
      context: ./src/api_service
    ports:
      - "9000:9000"
    networks:
      - test-network
    # entrypoint: ["/bin/sh", "-c", "echo 'Overriding docker-entrypoint.sh...'"]

  # ml_pipeline:
  #   build:
  #     context: ./src/ml-pipeline
  #   ports:
  #     - "5004:5004"
  #   networks:
  #     - test-network
  #   entrypoint: ["/bin/sh", "-c", "echo 'Overriding docker-entrypoint.sh...'"]

  test_runner:
    build:
      context: .
      dockerfile: test_runner/Dockerfile
    volumes:
      - ./tests/integration_tests:/app/tests/integration_tests
    working_dir: /app
    command: ["pipenv", "run", "pytest",
              "tests/integration_tests/"]
    networks:
      - test-network
    depends_on:
      - vector_db_service
      - api_service_base

networks:
  test-network:
    driver: bridge


# services:
#   # vector_db_service:
#   #   build:
#   #     context: ./src/vector_db
#   #     dockerfile: Dockerfile
#   #   ports:
#   #     - "8000:8000"
#   #   networks:
#   #     - test-network
#   #   volumes:
#   #     - ./src/vector_db:/app/src/vector_db
#   #   working_dir: /app
#   #   secrets:
#   #     - google_application_credentials
#   #   environment:
#   #     - GCP_PROJECT="ac215-final-project"
#   #     - GCS_BUCKET_NAME="gain-bucket"
#   #     - GOOGLE_APPLICATION_CREDENTIALS=/run/secrets/google_application_credentials
#   #   command: ["pipenv", "run", "python", "src/vector_db/cli.py", "--preprocess"]

#   gain-vector-db-cli:
#     build:
#       context: ./src/vector_db
#       dockerfile: Dockerfile
#     secrets:
#       - google_application_credentials
#     environment:
#       - GOOGLE_APPLICATION_CREDENTIALS=/run/secrets/google_application_credentials
#       - GCP_PROJECT="ac215-final-project"
#       - CHROMADB_HOST="gain-vector-db"
#       - CHROMADB_PORT=8000
#     depends_on:
#     - chromadb

#   chromadb:
#     image: chromadb/chroma:latest
#     ports:
#       - 8000:8000
#     volumes:
#       - ./src/vector_db/docker-volumes/chromadb:/chroma/chroma
#     environment:
#       - IS_PERSISTENT=TRUE
#       - ANONYMIZED_TELEMETRY=FALSE
#       - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]

#   api_service_base:
#     build:
#       context: ./src/api_service
#       dockerfile: Dockerfile
#     ports:
#       - "9000:9000"
#     environment:
#       - IMAGE_NAME="gain-rag-api-service"
#       - GCP_PROJECT="ac215-final-project"
#       - GCS_BUCKET_NAME="gain-bucket"
#       - CHROMADB_HOST="gain-vector-db"
#       - CHROMADB_PORT=8000
#       - GOOGLE_APPLICATION_CREDENTIALS=/run/secrets/google_application_credentials
#     secrets:
#       - google_application_credentials
#     networks:
#       - test-network
#     depends_on:
#       - gain-vector-db-cli
#       - chromadb

#   test_runner:
#     build:
#       context: .
#       dockerfile: test_runner/Dockerfile
#     volumes:
#       - ./tests/integration_tests:/app/tests/integration_tests
#     working_dir: /app
#     command: ["pipenv", "run", "pytest",
#               "tests/integration_tests/"]
#     networks:
#       - test-network
#     depends_on:
#       - gain-vector-db-cli
#       - api_service_base
#       - chromadb

# secrets:
#   google_application_credentials:
#     file: ../src/secrets/llm-service-account.json


# networks:
#   test-network:
#     driver: bridge
