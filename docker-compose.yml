services:
  vector_db_service:
    build:
      context: ./src/vector_db
      dockerfile: Dockerfile
    # secrets:
    #   - google_application_credentials
    volumes:
      - ./src:/app
    working_dir: /app
    command: ["pipenv", "run", "python", "src/vector_db/cli.py", "--preprocess"]
    environment:
      # - GOOGLE_APPLICATION_CREDENTIALS=/run/src/secrets/google_application_credentials
      - GCP_PROJECT="ac215-final-project"
      - CHROMADB_HOST="gain-vector-db"
  backend_service:
    build:
      context: ./src/api_service
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    networks:
      - backend-network
    environment:
      GCP_PROJECT: "ac215-final-project"
      GCS_BUCKET_NAME: "gain-bucket"
      CHROMADB_HOST: "gain-vector-db"
      CHROMADB_PORT: 8000
    command: ["pipenv", "run", "uvicorn_server"]
    # secrets:
    #   - google_application_credentials
    depends_on:
      - vector_db_service
  react_app:
    build:
      context: ./src/frontend_react
      dockerfile: Dockerfile
    volumes:
      - ./src/frontend_react:/app
    ports:
      - "3000:3000"
    networks:
      - backend-network
  # test_runner:
  #   build:
  #     context: .
  #     dockerfile: test_runner/Dockerfile
  #   volumes:
  #     - ./tests/integration_tests:/app/tests/integration_tests
  #   working_dir: /app
  #   command: ["pipenv", "run", "pytest", "tests/integration_tests/test_rag_chat.py"]
  #   networks:
  #     - backend-network
  #   depends_on:
  #     - backend_service
  #     - react_app
networks:
  backend-network:
    driver: bridge
# secrets:
#   google_application_credentials:
#     file: ./src/secrets/llm-service-account.json
