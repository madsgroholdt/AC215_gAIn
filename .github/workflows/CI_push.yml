name: CI on Merge to Main

on:
  push:
    branches:
      - main # Triggers when code is pushed to the main branch
      - milestone5_testing2
  pull_request:
    branches:
      - main # Runs on PRs to main branch

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache Docker Compose binary
        id: docker-compose-cache
        uses: actions/cache@v3
        with:
          path: /usr/local/bin/docker-compose
          key: docker-compose-${{ runner.os }}

      - name: Install Docker Compose if not cached
        if: steps.docker-compose-cache.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Install Pipenv
        run: pip install pipenv

      - name: Install dependencies with Pipenv
        run: pipenv install --python $(which python3.11)

      - name: Reinstall pytest
        working-directory: .
        run: pipenv install pytest

      # Check that docker compose file exists
      - name: Check that docker-compose exists
        working-directory: .
        run: ls -al

      # Ensure that pytest has been installed
      - name: Ensure Pytest is Installed
        working-directory: .
        run: pipenv run pytest --version

      - name: Build and start services with Docker Compose
        run: docker-compose up -d
        working-directory: ./

      # Set PYTHONPATH to include the root directory (or src)
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV

      # # Install pytest and pytest-cov for coverage
      # - name: Install pytest and pytest-cov
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install pytest pytest-cov langchain-core langchain-community
      #     pip install numpy pre-commit
      #     pre-commit install-hooks

      # # Run pre-commit hooks
      # - name: Run pre-commit hooks
      #   run: pre-commit run --all-files

      - name: Run integration tests
        working-directory: .
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          pipenv run pytest ./tests

      # Upload coverage report as an artifact
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov # The folder where pytest-cov stores HTML reports

      - name: Tear down services
        if: always()
        run: docker-compose down
        working-directory: ./
